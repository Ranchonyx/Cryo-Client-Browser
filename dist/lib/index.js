"use strict";var Cryo=(()=>{var B=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var D=Object.getOwnPropertyNames;var I=Object.prototype.hasOwnProperty;var v=(a,e)=>{for(var t in e)B(a,t,{get:e[t],enumerable:!0})},_=(a,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let r of D(e))!I.call(a,r)&&r!==t&&B(a,r,{get:()=>e[r],enumerable:!(s=E(e,r))||s.enumerable});return a};var F=a=>_(B({},"__esModule",{value:!0}),a);var P={};v(P,{cryo:()=>G});var y=class{pending=new Map;Track(e,t){this.pending.set(e,t)}Confirm(e){let t=this.pending.get(e);return t?(this.pending.delete(e),t):null}Has(e){return this.pending.has(e)}};var c=class a{constructor(e){this.buffer=e;this.view=new DataView(e.buffer,e.byteOffset,e.byteLength)}view;static alloc(e){return new a(new Uint8Array(e))}static from(e,t){if(t==="utf8")return new a(new TextEncoder().encode(e));let s=new Uint8Array(e.length/2);for(let r=0;r<s.length;r++)s[r]=parseInt(e.substring(r*2,r*2+16),16);return new a(s)}writeUInt32BE(e,t){this.view.setUint32(t,e)}writeUInt8(e,t){this.view.setInt8(t,e)}readUInt32BE(e){return this.view.getUint32(e)}readUInt8(e){return this.view.getUint8(e)}write(e,t=0){this.buffer.set(new TextEncoder().encode(e),t)}set(e,t){this.buffer.set(e.buffer,t)}toString(e){return e==="utf8"?new TextDecoder().decode(this.buffer):[...this.buffer].map(t=>t.toString(16).padStart(2,"0")).join("")}subarray(e,t){return new a(this.buffer.subarray(e,t))}copy(e,t=0){e.buffer.set(this.buffer,t)}get length(){return this.buffer.byteLength}};var u=class{static sidFromCryoBuffer(e){let t=e.subarray(0,4).toString("hex"),s=e.subarray(4,6).toString("hex"),r=e.subarray(6,8).toString("hex"),n=e.subarray(8,10).toString("hex"),i=e.subarray(10,16).toString("hex");return[t,s,r,n,i].join("-")}static sidToCryoBuffer(e){return c.from(e.replaceAll("-",""),"hex")}},h=class{Deserialize(e){let t=u.sidFromCryoBuffer(e),s=e.readUInt32BE(16),r=e.readUInt8(20);if(r!==1)throw new Error("Attempt to deserialize a non-ack binary message!");return{sid:t,ack:s,type:r}}Serialize(e,t,s=null){let r=c.alloc(21);return u.sidToCryoBuffer(e).copy(r,0),r.writeUInt32BE(t,16),r.writeUInt8(1,20),r}},M=class{Deserialize(e){let t=u.sidFromCryoBuffer(e),s=e.readUInt32BE(16),r=e.readUInt8(20),n=e.subarray(21).toString("utf8");if(r!==2)throw new Error("Attempt to deserialize a non-ping_pong binary message!");if(!(n==="ping"||n==="pong"))throw new Error(`Invalid payload ${n} in ping_pong binary message!`);return{sid:t,ack:s,type:r,payload:n}}Serialize(e,t,s){let r=c.alloc(25);return u.sidToCryoBuffer(e).copy(r,0),r.writeUInt32BE(t,16),r.writeUInt8(2,20),r.write(s,21),r}},C=class{Deserialize(e){let t=u.sidFromCryoBuffer(e),s=e.readUInt32BE(16),r=e.readUInt8(20),n=e.subarray(21).toString("utf8");if(r!==0)throw new Error("Attempt to deserialize a non-data binary message!");return{sid:t,ack:s,type:r,payload:n}}Serialize(e,t,s){let r=c.alloc(21+(s?.length||4));return u.sidToCryoBuffer(e).copy(r,0),r.writeUInt32BE(t,16),r.writeUInt8(0,20),r.write(s||"null",21),r}},w=class{Deserialize(e){let t=u.sidFromCryoBuffer(e),s=e.readUInt32BE(16),r=e.readUInt8(20),n=e.subarray(21);if(r!==4)throw new Error("Attempt to deserialize a non-data binary message!");return{sid:t,ack:s,type:r,payload:n}}Serialize(e,t,s){let r=s?s.length:4,n=c.alloc(21+r);return u.sidToCryoBuffer(e).copy(n,0),n.writeUInt32BE(t,16),n.writeUInt8(0,20),n.set(s||c.from("null","utf8"),21),n}},T=class{Deserialize(e){let t=u.sidFromCryoBuffer(e),s=e.readUInt32BE(16),r=e.readUInt8(20),n=e.subarray(21).toString("utf8");if(r!==3)throw new Error("Attempt to deserialize a non-error message!");return{sid:t,ack:s,type:r,payload:n}}Serialize(e,t,s){let r=c.alloc(21+(s?.length||13));return u.sidToCryoBuffer(e).copy(r,0),r.writeUInt32BE(t,16),r.writeUInt8(3,20),r.write(s||"unknown_error",21),r}},o=class{static GetFormatter(e){switch(e){case"data":case 0:return new C;case"error":case 3:return new T;case"ack":case 1:return new h;case"ping_pong":case 2:return new M;case"binarydata":case 4:return new w;default:throw new Error(`Binary message format for type '${e}' is not supported!`)}}static GetType(e){let t=e.readUInt8(20);if(t>3)throw new Error(`Unable to decode type from message ${e}. MAX_TYPE = 3, got ${t} !`);return t}static GetAck(e){return e.readUInt32BE(16)}static GetSid(e){return u.sidFromCryoBuffer(e)}static GetPayload(e,t){return e.subarray(21).toString(t)}};var S={0:"utf8data",1:"ack",2:"ping/pong",3:"error",4:"binarydata"},p=class{static Inspect(e,t="utf8"){let s=o.GetSid(e),r=o.GetAck(e),n=o.GetType(e),i=S[n]||"unknown",d=o.GetPayload(e,t);return`[${s},${r},${i},[${d}]]`}};function A(a){return localStorage.getItem("CRYO_DEBUG")?.includes(a)?(e,...t)=>{let i=(new Error().stack?.split(`
`)?.[2]??"unknown").trim().replace(/^at\s+/,""),d=i.substring(0,i.indexOf("(")-1),b=i.substring(i.lastIndexOf(":")-2,i.length-1);console.info(`${a.padEnd(24," ")}${new Date().toISOString().padEnd(32," ")} ${d.padEnd(64," ")} ${b.padEnd(8," ")} ${e}`,...t)}:()=>{}}var l=class a extends Error{constructor(e){super(e),Object.setPrototypeOf(this,a.prototype)}},g=class a{static AgainstNull(e,t){if(e===null)throw new l(t||`Assertion failed, "param" (${e}) was null!`)}static AgainstUndefined(e,t){if(e===void 0)throw new l(t||`Assertion failed, "param" (${e}) was undefined!`)}static AgainstNullish(e,t){a.AgainstUndefined(e,t),a.AgainstNull(e,t)}static CastAs(e){a.AgainstNullish(e)}static CastAssert(e,t,s){if(a.AgainstNullish(e,s),a.AgainstNullish(t,s),!t)throw new l("Parameter assertion failed in CastAssert!")}};var f=class{target=new EventTarget;on(e,t){g.CastAs(e),this.target.addEventListener(e,s=>{t(s.detail)})}emit(e,t){g.CastAs(e),this.target.dispatchEvent(new CustomEvent(e,{detail:t}))}};var m=class a extends f{constructor(t,s,r,n,i,d=A("CRYO_CLIENT_SESSION")){super();this.host=t;this.sid=s;this.socket=r;this.timeout=n;this.bearer=i;this.log=d;this.AttachListenersToSocket(r),this.emit("connected",void 0)}messages_pending_server_ack=new Map;server_ack_tracker=new y;current_ack=0;HandleOutgoingBinaryMessage(t){let s=o.GetAck(t);this.server_ack_tracker.Track(s,{timestamp:Date.now(),message:t}),this.socket&&(this.socket.send(t.buffer),this.log(`Sent ${p.Inspect(t)} to server.`))}HandlePingPongMessage(t){let s=o.GetFormatter("ping_pong"),r=s.Deserialize(t),n=s.Serialize(this.sid,r.ack,r.payload==="pong"?"ping":"pong");this.HandleOutgoingBinaryMessage(n)}HandleErrorMessage(t){let s=o.GetFormatter("error").Deserialize(t);this.log(s.payload)}async HandleAckMessage(t){let r=o.GetFormatter("ack").Deserialize(t).ack;if(!this.server_ack_tracker.Confirm(r)){this.log(`Got unknown ack_id ${r} from server.`);return}this.messages_pending_server_ack.delete(r),this.log(`Got ACK ${r} from server.`)}HandleUTF8DataMessage(t){let s=o.GetFormatter("utf8data").Deserialize(t),r=s.payload,n=s.sid,i=o.GetFormatter("ack").Serialize(this.sid,s.ack);this.HandleOutgoingBinaryMessage(i),n!==this.sid?this.emit("message-utf8",r):this.log("Dropped self-originated DATA message")}HandleBinaryDataMessage(t){let s=o.GetFormatter("binarydata").Deserialize(t),r=s.payload,n=s.sid,i=o.GetFormatter("ack").Serialize(this.sid,s.ack);this.HandleOutgoingBinaryMessage(i),n!==this.sid?this.emit("message-binary",r):this.log("Dropped self-originated DATA message")}async HandleIncomingBinaryMessage(t){let s=o.GetType(t);switch(this.log(`Received ${p.Inspect(t)} from server.`),s){case 2:this.HandlePingPongMessage(t);return;case 3:this.HandleErrorMessage(t);return;case 1:await this.HandleAckMessage(t);return;case 0:this.HandleUTF8DataMessage(t);return;case 4:this.HandleBinaryDataMessage(t);return;default:throw new Error(`Handle binary message type ${s}!`)}}async HandleError(t){this.log(`${t.name} Exception in CryoSocket: ${t.message}`),this.socket.close(1e3,`CryoSocket ${this.sid} was closed due to an error.`)}TranslateCloseCode(t){switch(t){case 1e3:return"Connection closed normally.";case 1006:return"Connection closed abnormally.";default:return"Unspecified cause for connection closure."}}async HandleClose(t,s){if(this.log(`CryoSocket was closed, code '${t}' (${this.TranslateCloseCode(t)}), reason '${s.toString("utf8")}' .`),t!==1e3){let r=0;for(this.log("Abnormal termination of Websocket connection, attempting to reconnect..."),this.socket=null,this.emit("disconnected",void 0);r<5;)try{this.socket=await a.ConstructSocket(this.host,this.timeout,this.bearer,this.sid),this.AttachListenersToSocket(this.socket),this.emit("reconnected",void 0);return}catch(n){if(n instanceof Error){let i=n.cause?.error?.code;console.warn(`Unable to reconnect to '${this.host}'. Error code: '${i}'. Retry attempt ${++r} / 5 ...`),await new Promise(d=>setTimeout(d,5e3))}}return}this.socket&&this.socket.close(),this.emit("closed",[t,s.toString("utf8")])}AttachListenersToSocket(t){t.addEventListener("message",async s=>{let r=s.data;r instanceof ArrayBuffer?await this.HandleIncomingBinaryMessage(new c(new Uint8Array(r))):this.log("Received text message instead of binary!")}),t.addEventListener("error",async s=>{await this.HandleError(new Error("Unspecified WebSocket error!"))}),t.addEventListener("close",async s=>{await this.HandleClose(s.code,new c(new TextEncoder().encode(s.reason)))})}static async ConstructSocket(t,s,r,n){let i=new URL(t);i.searchParams.set("authorization",`Bearer ${r}`),i.searchParams.set("x-cryo-sid",n);let d=new WebSocket(t);return d.binaryType="arraybuffer",new Promise((b,k)=>{setTimeout(()=>{d.readyState!==WebSocket.OPEN&&k(new Error(`Connection timeout of ${s} ms reached!`))},s),d.addEventListener("open",()=>{b(d)}),d.addEventListener("error",U=>{k(new Error("Error during session initialisation!",{cause:U}))})})}static async Connect(t,s,r=5e3){let n=crypto.randomUUID(),i=await a.ConstructSocket(t,r,s,n);return new a(t,n,i,r,s)}SendUTF8(t){let s=this.current_ack++,r=o.GetFormatter("utf8data").Serialize(this.sid,s,t);this.HandleOutgoingBinaryMessage(r)}SendBinary(t){let s=this.current_ack++,r=o.GetFormatter("binarydata").Serialize(this.sid,s,t);this.HandleOutgoingBinaryMessage(r)}get session_id(){return this.sid}Destroy(){this.socket.close()}};async function G(a,e,t=5e3){return m.Connect(a,e,t)}return F(P);})();
//# sourceMappingURL=index.js.map
