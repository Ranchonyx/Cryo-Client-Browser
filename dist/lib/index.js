"use strict";var Cryo=(()=>{var A=Object.defineProperty;var R=Object.getOwnPropertyDescriptor;var O=Object.getOwnPropertyNames;var P=Object.prototype.hasOwnProperty;var G=(a,e)=>{for(var r in e)A(a,r,{get:e[r],enumerable:!0})},N=(a,e,r,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of O(e))!P.call(a,t)&&t!==r&&A(a,t,{get:()=>e[t],enumerable:!(s=R(e,t))||s.enumerable});return a};var x=a=>N(A({},"__esModule",{value:!0}),a);var V={};G(V,{cryo:()=>W});var h=class{pending=new Map;Track(e,r){this.pending.set(e,r)}Confirm(e){let r=this.pending.get(e);return r?(this.pending.delete(e),r):null}Has(e){return this.pending.has(e)}};var c=class a{constructor(e){this.buffer=e;this.view=new DataView(e.buffer,e.byteOffset,e.byteLength)}view;static alloc(e){return new a(new Uint8Array(e))}static from(e,r){if(r==="utf8")return new a(new TextEncoder().encode(e));let s=new Uint8Array(e.length/2);for(let t=0;t<s.length;t++)s[t]=parseInt(e.substring(t*2,t*2+2),16);return new a(s)}static concat(e){if(e.length===0)return a.alloc(0);let r=e.reduce((n,i)=>n+i.length,0),s=new Uint8Array(r),t=0;for(let n of e)s.set(n.buffer,t),t+=n.length;return new a(s)}writeUInt32BE(e,r){this.view.setUint32(r,e)}writeUInt8(e,r){this.view.setUint8(r,e)}readUInt32BE(e){return this.view.getUint32(e)}readUInt8(e){return this.view.getUint8(e)}write(e,r=0){this.buffer.set(new TextEncoder().encode(e),r)}set(e,r){this.buffer.set(e.buffer,r)}toString(e){return e==="utf8"?new TextDecoder().decode(this.buffer):[...this.buffer].map(r=>r.toString(16).padStart(2,"0")).join("")}subarray(e,r){return new a(this.buffer.subarray(e,r))}copy(e,r=0){e.buffer.set(this.buffer,r)}get length(){return this.buffer.byteLength}};var g=class a extends Error{constructor(e){super(e),Object.setPrototypeOf(this,a.prototype)}},p=class a{static AgainstNull(e,r){if(e===null)throw new g(r||`Assertion failed, "param" (${e}) was null!`)}static AgainstUndefined(e,r){if(e===void 0)throw new g(r||`Assertion failed, "param" (${e}) was undefined!`)}static AgainstNullish(e,r){a.AgainstUndefined(e,r),a.AgainstNull(e,r)}static CastAs(e){a.AgainstNullish(e)}static CastAssert(e,r,s){if(a.AgainstNullish(e,s),a.AgainstNullish(r,s),!r)throw new g("Parameter assertion failed in CastAssert!")}};var l=class{static sidFromCryoBuffer(e){let r=e.subarray(0,4).toString("hex"),s=e.subarray(4,6).toString("hex"),t=e.subarray(6,8).toString("hex"),n=e.subarray(8,10).toString("hex"),i=e.subarray(10,16).toString("hex");return[r,s,t,n,i].join("-")}static sidToCryoBuffer(e){return c.from(e.replaceAll("-",""),"hex")}},w=class{Deserialize(e){let r=l.sidFromCryoBuffer(e),s=e.readUInt32BE(16),t=e.readUInt8(20);if(t!==0)throw new Error("Attempt to deserialize a non-ack binary message!");return{sid:r,ack:s,type:t}}Serialize(e,r,s=null){let t=c.alloc(21);return l.sidToCryoBuffer(e).copy(t,0),t.writeUInt32BE(r,16),t.writeUInt8(0,20),t}},v=class{Deserialize(e){let r=l.sidFromCryoBuffer(e),s=e.readUInt32BE(16),t=e.readUInt8(20),n=e.subarray(21).toString("utf8");if(t!==2)throw new Error("Attempt to deserialize a non-ping_pong binary message!");if(!(n==="ping"||n==="pong"))throw new Error(`Invalid payload ${n} in ping_pong binary message!`);return{sid:r,ack:s,type:t,payload:n}}Serialize(e,r,s){let t=c.alloc(25);return l.sidToCryoBuffer(e).copy(t,0),t.writeUInt32BE(r,16),t.writeUInt8(2,20),t.write(s,21),t}},T=class{Deserialize(e){let r=l.sidFromCryoBuffer(e),s=e.readUInt32BE(16),t=e.readUInt8(20),n=e.subarray(21).toString("utf8");if(t!==3)throw new Error("Attempt to deserialize a non-data binary message!");return{sid:r,ack:s,type:t,payload:n}}Serialize(e,r,s){let t=c.alloc(21+(s?.length||4));return l.sidToCryoBuffer(e).copy(t,0),t.writeUInt32BE(r,16),t.writeUInt8(3,20),t.write(s||"null",21),t}},M=class{Deserialize(e){let r=l.sidFromCryoBuffer(e),s=e.readUInt32BE(16),t=e.readUInt8(20),n=e.subarray(21);if(t!==4)throw new Error("Attempt to deserialize a non-data binary message!");return{sid:r,ack:s,type:t,payload:n}}Serialize(e,r,s){let t=s?s.length:4,n=c.alloc(21+t);return l.sidToCryoBuffer(e).copy(n,0),n.writeUInt32BE(r,16),n.writeUInt8(4,20),n.set(s||c.from("null","utf8"),21),n}},U=class{Deserialize(e){let r=l.sidFromCryoBuffer(e),s=e.readUInt32BE(16),t=e.readUInt8(20),n=e.subarray(21).toString("utf8");if(t!==1)throw new Error("Attempt to deserialize a non-error message!");return{sid:r,ack:s,type:t,payload:n}}Serialize(e,r,s){let t=c.alloc(21+(s?.length||13));return l.sidToCryoBuffer(e).copy(t,0),t.writeUInt32BE(r,16),t.writeUInt8(1,20),t.write(s||"unknown_error",21),t}},S=class{Deserialize(e){let r=l.sidFromCryoBuffer(e),s=e.readUInt32BE(16),t=e.readUInt8(20),n=e.subarray(21);if(t!==5)throw new Error("Attempt to deserialize a non-server_hello message!");return{sid:r,ack:s,type:t,payload:n}}Serialize(e,r,s){if(p.CastAssert(s,s!==null,"payload was null!"),s.length!==65)throw new Error("Payload in ServerHelloMessage must be exactly 65 bytes!");let t=c.alloc(86);return l.sidToCryoBuffer(e).copy(t,0),t.writeUInt32BE(r,16),t.writeUInt8(5,20),t.set(s,21),t}},D=class{Deserialize(e){let r=l.sidFromCryoBuffer(e),s=e.readUInt32BE(16),t=e.readUInt8(20),n=e.subarray(21);if(t!==6)throw new Error("Attempt to deserialize a non-client_hello message!");return{sid:r,ack:s,type:t,payload:n}}Serialize(e,r,s){if(p.CastAssert(s,s!==null,"payload was null!"),s.length!==65)throw new Error("Payload in ClientHelloMessage must be exactly 65 bytes!");let t=c.alloc(86);return l.sidToCryoBuffer(e).copy(t,0),t.writeUInt32BE(r,16),t.writeUInt8(6,20),t.set(s,21),t}},F=class{Deserialize(e){let r=l.sidFromCryoBuffer(e),s=e.readUInt32BE(16),t=e.readUInt8(20),n=e.subarray(21).toString("utf8");if(t!==7)throw new Error("Attempt to deserialize a non-handshake_done message!");return{sid:r,ack:s,type:t,payload:n}}Serialize(e,r,s){let t=c.alloc(21+(s?.length||4));return l.sidToCryoBuffer(e).copy(t,0),t.writeUInt32BE(r,16),t.writeUInt8(7,20),t.write(s||"null",21),t}},o=class{static GetFormatter(e){switch(e){case"utf8data":case 3:return new T;case"error":case 1:return new U;case"ack":case 0:return new w;case"ping_pong":case 2:return new v;case"binarydata":case 4:return new M;case 5:case"server_hello":return new S;case 6:case"client_hello":return new D;case 7:case"handshake_done":return new F;default:throw new Error(`Binary message format for type '${e}' is not supported!`)}}static GetType(e){let r=e.readUInt8(20);if(r>7)throw new Error(`Unable to decode type from message ${e}. MAX_TYPE = 7, got ${r} !`);return r}static GetAck(e){return e.readUInt32BE(16)}static GetSid(e){return l.sidFromCryoBuffer(e)}static GetPayload(e,r){return e.subarray(21).toString(r)}};var $={0:"ack",1:"error",2:"ping/pong",3:"utf8data",4:"binarydata",5:"server_hello",6:"client_hello",7:"handshake_done"},_=class{static Inspect(e,r="utf8"){let s=o.GetSid(e),t=o.GetAck(e),n=o.GetType(e),i=$[n]||"unknown",y=o.GetPayload(e,r);return`[${s},${t},${i},[${y}]]`}};function b(a){return localStorage.getItem("CRYO_DEBUG")?.includes(a)?(e,...r)=>{let i=(new Error().stack?.split(`
`)?.[2]??"unknown").trim().replace(/^at\s+/,""),y=i.substring(0,i.indexOf("(")-1),f=i.substring(i.lastIndexOf(":")-2,i.length-1);console.info(`${a.padEnd(24," ")}${new Date().toISOString().padEnd(32," ")} ${y.padEnd(64," ")} ${f.padEnd(8," ")} ${e}`,...r)}:()=>{}}var E=class{target=new EventTarget;on(e,r){p.CastAs(e),this.target.addEventListener(e,s=>{r(s.detail)})}emit(e,r){p.CastAs(e),this.target.dispatchEvent(new CustomEvent(e,{detail:r}))}};async function L(a,e){return crypto.subtle.importKey("raw",a.buffer,{name:"AES-GCM"},!1,e)}function I(a){return{name:"AES-GCM",iv:a.buffer}}var B=class{nonce=0;enc_key_promise;dec_key_promise;constructor(e,r){this.enc_key_promise=L(e,["encrypt"]),this.dec_key_promise=L(r,["decrypt"])}create_iv(){let e=c.alloc(12);return e.writeUInt32BE(this.nonce++,8),e}async encrypt(e){let r=this.create_iv(),s=await this.enc_key_promise,t=await crypto.subtle.encrypt(I(r),s,e.buffer);return c.concat([r,new c(new Uint8Array(t))])}async decrypt(e){let r=e.subarray(0,12),s=await this.dec_key_promise,t=e.subarray(12),n=await crypto.subtle.decrypt(I(r),s,t.buffer);return new c(new Uint8Array(n))}};var C=class{constructor(e,r,s,t,n){this.sid=e;this.send_plain=r;this.formatter=s;this.next_ack=t;this.events=n;this.init_keys()}ECDH_ALGO={name:"ECDH",namedCurve:"P-256"};handshake_state=0;ecdh=null;receive_key=null;transmit_key=null;async init_keys(){try{this.ecdh=await crypto.subtle.generateKey(this.ECDH_ALGO,!0,["deriveBits"]),this.handshake_state=1}catch(e){this.events.onFailure(`Failed to generate ECDH keys: ${e}`)}}async on_server_hello(e){if(this.handshake_state!==1){this.events.onFailure(`CLIENT_HELLO received while in state ${this.handshake_state}`);return}let r=o.GetFormatter("server_hello").Deserialize(e),s=await crypto.subtle.importKey("raw",r.payload.buffer,this.ECDH_ALGO,!1,[]);if(!this.ecdh?.privateKey){this.events.onFailure("Local ECDH private key not initialised.");return}let t=await crypto.subtle.deriveBits({name:"ECDH",public:s},this.ecdh.privateKey,256),n=new Uint8Array(await crypto.subtle.digest("SHA-256",t));this.transmit_key=new c(n.subarray(16,32)),this.receive_key=new c(n.subarray(0,16));let i=new c(new Uint8Array(await crypto.subtle.exportKey("raw",this.ecdh.publicKey))),y=this.next_ack(),f=this.formatter.GetFormatter("client_hello").Serialize(this.sid,y,i);await this.send_plain(f),this.handshake_state=2}async on_server_handshake_done(e){if(this.handshake_state!==2){this.events.onFailure(`HANDSHAKE_DONE received while in state ${this.state}`);return}let r=o.GetFormatter("handshake_done").Deserialize(e),s=o.GetFormatter("handshake_done").Serialize(this.sid,r.ack,null);await this.send_plain(s),this.events.onSecure({receive_key:this.receive_key,transmit_key:this.transmit_key}),this.handshake_state=3}get is_secure(){return this.handshake_state===3}get state(){return this.handshake_state}};var m=class{constructor(e,r,s,t,n=b("CRYO_FRAME_ROUTER")){this.formatter=e;this.is_secure=r;this.decrypt=s;this.handlers=t;this.log=n}try_get_type(e){try{return o.GetType(e)}catch{return null}}async do_route(e){let r=e,s=this.try_get_type(e);if(s===null&&this.is_secure())try{r=await this.decrypt(e),s=this.try_get_type(r)}catch(t){this.log(`Decryption failed: ${t}`,e);return}if(s===null){this.log("Unknown frame type",e);return}switch(s){case 2:await this.handlers.on_ping_pong(r);return;case 1:await this.handlers.on_error(r);return;case 0:await this.handlers.on_ack(r);return;case 3:await this.handlers.on_utf8(r);return;case 4:await this.handlers.on_binary(r);return;case 5:await this.handlers.on_server_hello?.(r);return;case 6:await this.handlers.on_client_hello?.(r);return;case 7:await this.handlers.on_handshake_done?.(r);return;default:this.log(`Unsupported binary message type ${s}!`)}}};function z(a,e,r){let s=t=>{a.removeEventListener(e,s),r(t)};a.addEventListener(e,s)}var k=class a extends E{constructor(r,s,t,n,i,y,f=b("CRYO_CLIENT_SESSION")){super();this.host=r;this.sid=s;this.socket=t;this.timeout=n;this.bearer=i;this.use_cale=y;this.log=f;if(y){let d={onSecure:({transmit_key:u,receive_key:H})=>{this.crypto=new B(u,H),this.log("Channel secured."),this.emit("connected",void 0)},onFailure:u=>{this.log(`Handshake failure: ${u}`),this.Destroy(4011,"Failure during CALE handshake.")}};this.handshake=new C(this.sid,async u=>this.socket.send(u.buffer),o,()=>this.current_ack++,d),this.router=new m(o,()=>this.handshake.is_secure,async u=>this.crypto.decrypt(u),{on_ping_pong:async u=>this.HandlePingPongMessage(u),on_ack:async u=>this.HandleAckMessage(u),on_error:async u=>this.HandleErrorMessage(u),on_utf8:async u=>this.HandleUTF8DataMessage(u),on_binary:async u=>this.HandleBinaryDataMessage(u),on_server_hello:async u=>this.handshake.on_server_hello(u),on_handshake_done:async u=>this.handshake.on_server_handshake_done(u)})}else this.log("CALE disabled, running in unencrypted mode."),this.router=new m(o,()=>!1,async d=>d,{on_ping_pong:async d=>this.HandlePingPongMessage(d),on_ack:async d=>this.HandleAckMessage(d),on_error:async d=>this.HandleErrorMessage(d),on_utf8:async d=>this.HandleUTF8DataMessage(d),on_binary:async d=>this.HandleBinaryDataMessage(d),on_server_hello:async d=>this.Destroy(4010,"CALE Mismatch. The server excepts CALE encryption, which is currently disabled.")}),setTimeout(()=>this.emit("connected",void 0));this.AttachListenersToSocket(t)}messages_pending_server_ack=new Map;server_ack_tracker=new h;current_ack=0;ping_pong_formatter=o.GetFormatter("ping_pong");ack_formatter=o.GetFormatter("ack");error_formatter=o.GetFormatter("error");utf8_formatter=o.GetFormatter("utf8data");binary_formatter=o.GetFormatter("binarydata");crypto=null;handshake=null;router;AttachListenersToSocket(r){this.use_cale?z(r,"message",s=>{if(!(s.data instanceof ArrayBuffer))return;let t=new c(new Uint8Array(s.data)),n=o.GetType(t);if(n!==5){this.log(`CALE mismatch: expected SERVER_HELLO, got ${n}`),this.Destroy(4010,"CALE mismatch: The server has disabled CALE.");return}this.router.do_route(t).then(()=>{r.addEventListener("message",async i=>{i.data instanceof ArrayBuffer&&await this.router.do_route(new c(new Uint8Array(i.data)))})})}):r.addEventListener("message",async s=>{s.data instanceof ArrayBuffer&&await this.router.do_route(new c(new Uint8Array(s.data)))}),r.addEventListener("error",async s=>{await this.HandleError(new Error("Unspecified WebSocket error!",{cause:s}))}),r.addEventListener("close",async s=>{await this.HandleClose(s.code,new c(new TextEncoder().encode(s.reason)))})}static async ConstructSocket(r,s,t,n){let i=new URL(r);i.searchParams.set("authorization",`Bearer ${t}`),i.searchParams.set("x-cryo-sid",n);let y=new WebSocket(i);return y.binaryType="arraybuffer",new Promise((f,d)=>{setTimeout(()=>{y.readyState!==WebSocket.OPEN&&d(new Error(`Connection timeout of ${s} ms reached!`))},s),y.addEventListener("open",()=>{f(y)}),y.addEventListener("error",u=>{d(new Error("Error during session initialisation!",{cause:u}))})})}static async Connect(r,s,t=!0,n=5e3){let i=crypto.randomUUID(),y=await a.ConstructSocket(r,n,s,i);return new a(r,i,y,n,s,t)}async HandleOutgoingBinaryMessage(r){let s=o.GetType(r);if(s===3||s===4){let n=o.GetAck(r);this.server_ack_tracker.Track(n,{timestamp:Date.now(),message:r})}if(!this.socket)return;let t=r;this.use_cale&&this.secure&&(t=await this.crypto.encrypt(r));try{this.socket.send(t.buffer)}catch(n){n instanceof Error&&this.HandleError(n).then(i=>null)}this.log(`Sent ${_.Inspect(r)} to server.`)}async HandlePingPongMessage(r){let s=this.ping_pong_formatter.Deserialize(r),t=this.ping_pong_formatter.Serialize(this.sid,s.ack,s.payload==="pong"?"ping":"pong");await this.HandleOutgoingBinaryMessage(t)}async HandleErrorMessage(r){let s=this.error_formatter.Deserialize(r);this.log(s.payload)}async HandleAckMessage(r){let t=this.ack_formatter.Deserialize(r).ack;if(!this.server_ack_tracker.Confirm(t)){this.log(`Got unknown ack_id ${t} from server.`);return}this.messages_pending_server_ack.delete(t),this.log(`Got ACK ${t} from server.`)}async HandleUTF8DataMessage(r){let s=this.utf8_formatter.Deserialize(r),t=s.payload,n=this.ack_formatter.Serialize(this.sid,s.ack);await this.HandleOutgoingBinaryMessage(n),this.emit("message-utf8",t)}async HandleBinaryDataMessage(r){let s=this.binary_formatter.Deserialize(r),t=s.payload,n=this.ack_formatter.Serialize(this.sid,s.ack);await this.HandleOutgoingBinaryMessage(n),this.emit("message-binary",t)}async HandleError(r){this.log(`${r.name} Exception in CryoSocket: ${r.message}`),this.socket.close(4002,`CryoSocket ${this.sid} was closed due to an error.`)}TranslateCloseCode(r){switch(r){case 4e3:return"Connection closed normally.";case 4001:return"Connection closed due to a client error.";case 4002:return"Connection closed due to a server error.";case 4010:return"Connection closed due to a mismatch in client/server CALE configuration.";case 4011:return"Connection closed due to an error in the CALE handshake.";default:return"Unspecified cause for connection closure."}}async HandleClose(r,s){if(this.log(`Websocket was closed. Code=${r} (${this.TranslateCloseCode(r)}), reason=${s.toString("utf8")}.`),r!==4e3){let t=0,n=5e3;for(this.log("Abnormal termination of Websocket connection, attempting to reconnect..."),this.socket=null,this.emit("disconnected",void 0);t<5;)try{this.socket=await a.ConstructSocket(this.host,this.timeout,this.bearer,this.sid),this.AttachListenersToSocket(this.socket),this.emit("reconnected",void 0);return}catch(i){if(i instanceof Error){let y=i.cause?.error?.code;console.warn(`Unable to reconnect to '${this.host}'. Error code: '${y}'. Retry attempt in ${n} ms. Attempt ${t++} / 5`),await new Promise(f=>setTimeout(f,n)),n+=t*1e3}}console.warn(`Gave up on reconnecting to '${this.host}'`);return}this.socket&&this.socket.close(),this.emit("closed",[r,s.toString("utf8")])}async SendUTF8(r){let s=this.current_ack++,t=o.GetFormatter("utf8data").Serialize(this.sid,s,r);await this.HandleOutgoingBinaryMessage(t)}async SendBinary(r){let s=this.current_ack++,t=o.GetFormatter("binarydata").Serialize(this.sid,s,r);await this.HandleOutgoingBinaryMessage(t)}Close(){this.Destroy(4e3,"Client finished.")}get secure(){return this.use_cale&&this.crypto!==null}get session_id(){return this.sid}Destroy(r=1e3,s=""){this.log(`Teardown of session. Code=${r}, reason=${s}`),this.socket.close(r,s)}};async function W(a,e,r,s=5e3){return k.Connect(a,e,r,s)}return x(V);})();
//# sourceMappingURL=index.js.map
